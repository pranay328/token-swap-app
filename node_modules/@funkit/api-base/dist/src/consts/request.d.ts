import type { RetryOptions } from './retry';
export interface Logger {
    debug(title: string, data?: object): void;
    error(title: string, data?: object): void;
    info(title: string, data?: object): void;
    warn(title: string, data?: object): void;
}
export interface BaseApiRequest {
    apiKey: string;
    logger?: Logger;
    signal?: AbortSignal;
}
export interface BaseRequest extends BaseApiRequest {
    uri: string;
    method: 'PUT' | 'DELETE' | 'GET' | 'POST';
    retryOptions?: RetryOptions;
    body?: object;
}
export type GetRequest = Omit<BaseRequest, 'body' | 'method'>;
export type PostRequest = Omit<BaseRequest, 'method'>;
export type DeleteRequest = Omit<BaseRequest, 'body' | 'method'>;
export type PutRequest = Omit<BaseRequest, 'method'>;
