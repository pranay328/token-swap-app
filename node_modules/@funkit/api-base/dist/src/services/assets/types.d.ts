import type { Address } from 'viem';
import type { BaseApiRequest } from '../../consts';
export interface GetAllowedAssetsRequest extends BaseApiRequest {
}
export interface GetAllowedAssetsResponse {
    [chainId: string]: Address[] | undefined;
}
export interface GetAssetPriceInfoRequest extends BaseApiRequest {
    chainId: string;
    assetTokenAddress: string;
}
export interface GetAssetErc20ByChainAndSymbolRequest extends BaseApiRequest {
    chainId: string;
    symbol: string;
}
export interface Erc20AssetInfo {
    address: Address;
    chain: string;
    decimals: number;
    name: string;
    symbol: string;
}
export type GetAssetPriceInfoResponse = {
    unitPrice: number;
    amount: number;
    total: number;
};
export interface GetAllWalletTokensRequest extends BaseApiRequest {
    walletAddress: string;
    onlyVerifiedTokens: boolean;
}
export interface AssetBalanceInfo {
    chainId: string;
    contractAddress: string;
    decimals: number;
    logo: string;
    name: string;
    price: number | null;
    symbol: string;
    tokenBalance: string;
    totalUsdValue: number | null;
}
export type ChainAssetBalanceInfo = {
    [tokenAddress: string]: AssetBalanceInfo;
};
export type GetAllWalletTokensResponse = {
    [chainId: number]: ChainAssetBalanceInfo;
};
export interface GetAllWalletTokensByChainIdRequest extends BaseApiRequest {
    chainId: string;
    walletAddress: string;
    onlyVerifiedTokens: boolean;
}
export type GetAllWalletTokensByChainIdResponse = ChainAssetBalanceInfo;
export interface GetAllWalletNFTsRequest extends BaseApiRequest {
    walletAddress: string;
}
export interface ChainNFTInfo {
    address: string;
    token_id: string;
    floor_price: string;
}
export interface ChainToNFTMapInfo {
    [chainId: string]: ChainNFTInfo[];
}
export interface GetAllWalletNFTsResponse {
    nfts: ChainToNFTMapInfo;
}
export interface GetAllWalletNFTsByChainIdRequest extends BaseApiRequest {
    chainId: string;
    walletAddress: string;
}
export interface GetAllWalletNFTsByChainIdResponse {
    nfts: ChainNFTInfo[];
}
export interface GetWalletLidoWithdrawalsByChainId extends BaseApiRequest {
    chainId: string;
    walletAddress: string;
}
export type GetWalletLidoWithdrawalsByChainIdResponse = [number[], number[]];
export interface GetNftNameRequest extends BaseApiRequest {
    chainId: string;
    nftAddress: string;
}
export interface GetNftAddressRequest extends BaseApiRequest {
    name: string;
}
export interface NftAssetInfo {
    address: Address;
    chain: string;
    name: string;
}
